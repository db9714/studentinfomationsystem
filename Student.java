
package studentinfomationsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;

public class Student extends javax.swing.JFrame {

   Connection conn;
   ResultSet rs;
   Statement state;
   int curRow = 0;
    public Student() {
        this.setTitle("Student");
        initComponents();
        DoConnect();
        CurrentDate();
    }
public void DoConnect(){
         try{
        String host = "jdbc:derby://localhost:1527/StudentInfo";
        String dName = "abc";
        String dPass= "123";
          conn = DriverManager.getConnection( host, dName, dPass );
         state = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
        String SQL = "SELECT * FROM APP.STUDENT";
         rs = state.executeQuery( SQL );
         
        rs.next();
        int Id = rs.getInt("StdID");
        String Id2 = Integer.toString(Id); //Convert int ID to String
        String sName = rs.getString("StdName");
        String sFaculty = rs.getString("Faculty");
        String sCourse = rs.getString("Course");
        String sCity = rs.getString("City");
        String sAddress = rs.getString("Address");
        String sPhone = rs.getString("Phone");
        String sEmail = rs.getString("Email");

        txtId.setText(Id2); //Set record values onto form textfields
        txtName.setText(sName);
        txtFaculty.setText(sFaculty);
        txtCourse.setText(sCourse);
        txtCity.setText(sCity);
        txtAddress.setText(sAddress);
        txtPhone.setText(sPhone);
        txtEmail.setText(sEmail);
     }
   catch ( SQLException err ) {       //Handle database connection errors
        System.out.println( err.getMessage( ) );
    }
    }

public void CurrentDate(){

    Thread clock = new Thread() {
        public void run() {
            for (;;) {
                Calendar cal = new GregorianCalendar();
                int month = cal.get(Calendar.MONTH);
                int year = cal.get(Calendar.YEAR);
                int day = cal.get(Calendar.DAY_OF_MONTH);
                txt_date.setText("Date " + year + "/" + (month + 1) + "/" + day);

                int second = cal.get(Calendar.SECOND);
                int minute = cal.get(Calendar.MINUTE);
                int hour = cal.get(Calendar.HOUR);
                txt_time.setText("Time  " + hour + ":" + (minute) + ":" + second);
                try {
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    };
    clock.start();
}

public void close(){
    WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCourse = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtFaculty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        btnFirst = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        txt_date = new javax.swing.JMenu();
        txt_time = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Infomation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Garamond Pro Bold", 1, 18), java.awt.Color.red)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Course");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Id");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Phone");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Address");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("City");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Email");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Faculty");

        btnFirst.setText("First");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrev.setText("Prev");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId)
                    .addComponent(txtFaculty)
                    .addComponent(txtCity)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                    .addComponent(txtAddress)
                    .addComponent(txtName)
                    .addComponent(txtEmail))
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnFirst)
                .addGap(18, 18, 18)
                .addComponent(btnPrev)
                .addGap(18, 18, 18)
                .addComponent(btnNext)
                .addGap(18, 18, 18)
                .addComponent(btnLast)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPrev)
                    .addComponent(btnNext)
                    .addComponent(btnLast))
                .addGap(24, 24, 24))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Command", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 1, 18))); // NOI18N

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Button-Add-icon.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Actions-document-edit-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Delete-Database-icon.png"))); // NOI18N
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/File-Delete-icon.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancel)
                    .addComponent(btnUpdate)
                    .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Bookmark-delete-icon.png"))); // NOI18N
        jMenuItem2.setText("Close");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Button-Close-icon (1).png"))); // NOI18N
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        txt_date.setText("Date");
        jMenuBar1.add(txt_date);

        txt_time.setText("Time");
        jMenuBar1.add(txt_time);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        try {
            rs.first();
            int Id = rs.getInt("StdID");
            String Id2 = Integer.toString(Id); //Convert int ID to String
            String sName = rs.getString("StdName");
            String sFaculty = rs.getString("Faculty");
            String sCourse = rs.getString("Course");
            String sCity = rs.getString("City");
            String sAddress = rs.getString("Address");
            String sPhone = rs.getString("Phone");
            String sEmail = rs.getString("Email");

            txtId.setText(Id2);
            txtName.setText(sName);
            txtFaculty.setText(sFaculty);
            txtCourse.setText(sCourse);
            txtCity.setText(sCity);
            txtAddress.setText(sAddress);
            txtPhone.setText(sPhone);
            txtEmail.setText(sEmail);
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err.getMessage());
        } 
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try {
            if (rs.next()) {
                int Id = rs.getInt("StdID");
                String Id2 = Integer.toString(Id); //Convert int ID to String
                String sName = rs.getString("StdName");
                String sFaculty = rs.getString("Faculty");
                String sCourse = rs.getString("Course");
                String sCity = rs.getString("City");
                String sAddress = rs.getString("Address");
                String sPhone = rs.getString("Phone");
                String sEmail = rs.getString("Email");

                txtId.setText(Id2);
                txtName.setText(sName);
                txtFaculty.setText(sFaculty);
                txtCourse.setText(sCourse);
                txtCity.setText(sCity);
                txtAddress.setText(sAddress);
                txtPhone.setText(sPhone);
                txtEmail.setText(sEmail);
            } else {
                rs.previous();
                JOptionPane.showMessageDialog(this, "end of file");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err.getMessage());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        try {
            if (rs.previous()) {
                int Id = rs.getInt("StdID");
                String Id2 = Integer.toString(Id); //Convert int ID to String
                String sName = rs.getString("StdName");
                String sFaculty = rs.getString("Faculty");
                String sCourse = rs.getString("Course");
                String sCity = rs.getString("City");
                String sAddress = rs.getString("Address");
                String sPhone = rs.getString("Phone");
                String sEmail = rs.getString("Email");

                txtId.setText(Id2);
                txtName.setText(sName);
                txtFaculty.setText(sFaculty);
                txtCourse.setText(sCourse);
                txtCity.setText(sCity);
                txtAddress.setText(sAddress);
                txtPhone.setText(sPhone);
                txtEmail.setText(sEmail);
            } else {
                rs.next();
                JOptionPane.showMessageDialog(this, "start of file");
            }
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
try {
    rs.last();
      int Id = rs.getInt("StdID");
        String Id2 = Integer.toString(Id); //Convert int ID to String
        String sName = rs.getString("StdName");
        String sFaculty = rs.getString("Faculty");
        String sCourse = rs.getString("Course");
        String sCity = rs.getString("City");
        String sAddress = rs.getString("Address");
        String sPhone = rs.getString("Phone");
        String sEmail = rs.getString("Email");

        txtId.setText(Id2); 
        txtName.setText(sName);
        txtFaculty.setText(sFaculty);
        txtCourse.setText(sCourse);
        txtCity.setText(sCity);
        txtAddress.setText(sAddress);
        txtPhone.setText(sPhone);
        txtEmail.setText(sEmail);
    }

catch(SQLException err){
    JOptionPane.showMessageDialog(this, err.getMessage());
    
}            // TODO add your handling code here:
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        try {
            curRow = rs.getRow(); //Get current row
            rs.last(); //Go to last record
            int Id = rs.getInt("StdID") + 1; //Increment last record by 1
            String Id2 = Integer.toString(Id); //Change integer to string
            txtId.setText(Id2); //Set this number as new Student ID
            //Clear all other text fields ready for new record

            txtId.setText("");
            txtName.setText("");
            txtFaculty.setText("");
            txtCourse.setText("");
            txtCity.setText("");
            txtAddress.setText("");
            txtPhone.setText("");
            txtEmail.setText("");
            txtCity.setText("");

            //Disable/Enable appropriate buttons
            btnFirst.setEnabled(false);
            btnPrev.setEnabled(false);
            btnNext.setEnabled(false);
            btnLast.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDel.setEnabled(false);
            btnNew.setEnabled(false);
            btnSave.setEnabled(true);
            btnCancel.setEnabled(true);
        } catch (SQLException err) { //Handle any error here
            JOptionPane.showMessageDialog(this, err.getMessage());
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
System.exit(0);
            }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {

            rs.absolute(curRow);

            txtId.setText(Integer.toString(rs.getInt("StdID")));
            txtName.setText(rs.getString("StdName"));
            txtFaculty.setText(rs.getString("Faculty"));
            txtCourse.setText(rs.getString("Course"));
            txtCity.setText(rs.getString("City"));
            txtAddress.setText(rs.getString("Address"));
            txtPhone.setText(rs.getString("Phone"));
            txtEmail.setText(rs.getString("Email"));

            //Disable/Enable appropriate buttons
            btnFirst.setEnabled(true);
            btnPrev.setEnabled(true);
            btnNext.setEnabled(true);
            btnLast.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnDel.setEnabled(true);
            btnNew.setEnabled(true);
            btnSave.setEnabled(false);
            btnCancel.setEnabled(false);

        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this, err.getMessage());
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //Get data from form text fields
        String newId = txtId.getText();
        String newName = txtName.getText();
        String newFaculty = txtFaculty.getText();
        String newCourse = txtCourse.getText();
        String newCity = txtCity.getText();
        String newAddress = txtAddress.getText();
        String newTelephone = txtPhone.getText();
        String newEmail = txtEmail.getText();

    //Check if user has entered required data
        if (newId.equals("") || newName.equals("") || newFaculty.equals("") || newCourse.equals("")
                || newAddress.equals("") || newTelephone.equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter required details");
        } else {
            int newId2 = Integer.parseInt(newId); //Change ID to int before saving

            try {
                //Update ResultSet with new data
                rs.moveToInsertRow();
                rs.updateInt("StdID", newId2);
                rs.updateString("StdName", newName);
                rs.updateString("Faculty", newFaculty);
                rs.updateString("Course", newCourse);
                rs.updateString("City", newCity);
                rs.updateString("Address", newAddress);
                rs.updateString("Phone", newTelephone);
                rs.updateString("Email", newEmail);

                rs.insertRow(); //Insert row into table
                rs.close(); //Close ResultSet
                state.close(); //Close connection 

                //Re-load table data 
                state = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                String SQL = "SELECT * FROM APP.STUDENT";
                rs = state.executeQuery(SQL);

                rs.last(); //Got to last record and get data
                int Id = rs.getInt("StdID");
                String Id2 = Integer.toString(Id);
                String sName = rs.getString("StdName");
                String sFaculty = rs.getString("Faculty");
                String sCourse = rs.getString("Course");
                String sCity = rs.getString("City");
                String sAddress = rs.getString("Address");
                String sTelephone = rs.getString("Phone");
                String semail = rs.getString("Email");

                //Populate form with data again
                txtId.setText(Id2);
                txtName.setText(sName);
                txtFaculty.setText(sFaculty);
                txtCourse.setText(sCourse);
                txtCity.setText(sCity);
                txtAddress.setText(sAddress);
                txtPhone.setText(sTelephone);
                txtEmail.setText(semail);

                //Disable/Enable appropriate buttons
                btnFirst.setEnabled(true);
                btnPrev.setEnabled(true);
                btnNext.setEnabled(true);
                btnLast.setEnabled(true);
                btnUpdate.setEnabled(true);
                btnDel.setEnabled(true);
                btnNew.setEnabled(true);
                btnSave.setEnabled(false);
                btnCancel.setEnabled(false);

                JOptionPane.showMessageDialog(this, "Record saved successfully");
            } catch (SQLException err) { //Handle errors here
                JOptionPane.showMessageDialog(this, err.getMessage());
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
//Ask user to confirm record deletion
        int temp = JOptionPane.showConfirmDialog(null, "Delete record?", "Confirm deletion", JOptionPane.YES_NO_OPTION);
        if (temp == 0) //Here we check which option was selected by user: Yes = 0
        {
            try {
                rs.deleteRow(); //Delete table record
                rs.close(); //Close ResultSet
                state.close(); //Close connection 

                //Re-load table data
                state = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
                String SQL = "SELECT * FROM APP.STUDENT";
                rs = state.executeQuery(SQL);

                rs.next();
                int Id = rs.getInt("StdID");
                String Id2 = Integer.toString(Id);
                String sName = rs.getString("StdName");
                String sFaculty = rs.getString("Faculty");
                String sCourse = rs.getString("Course");
                String sCity = rs.getString("City");
                String sAddress = rs.getString("Address");
                String sTelephone = rs.getString("Phone");
                String sEmail = rs.getString("Email");

                //Populate form with data again
                txtId.setText(Id2);
                txtName.setText(sName);
                txtFaculty.setText(sFaculty);
                txtCourse.setText(sCourse);
                txtCity.setText(sCity);
                txtAddress.setText(sAddress);
                txtPhone.setText(sTelephone);
                txtEmail.setText(sEmail);

                JOptionPane.showMessageDialog(this, "Record deleted successfully");
            } catch (SQLException err) { //Handle errors here
                JOptionPane.showMessageDialog(this, err.getMessage());
            }
        }

    }//GEN-LAST:event_btnDelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        //Get data from form text fields
        String upId = txtId.getText( );
        String upName = txtName.getText( );
        String upFaculty = txtFaculty.getText( );
        String upCourse = txtCourse.getText( );
        String upCity = txtCity.getText( );
        String upAddress = txtAddress.getText( );
        String upphone = txtPhone.getText( );
        String upemail = txtEmail.getText( );

        int upId2 = Integer.parseInt( upId );//Change string ID to int ID before update

        try {

            //Update table with new data
            rs.updateString( "StdID", upId );
            rs.updateString( "StdName", upName );
            rs.updateString( "Faculty", upFaculty );
            rs.updateString( "Course", upCourse );
            rs.updateString( "City", upCity );
            rs.updateString( "Address", upAddress );
            rs.updateString( "Phone", upphone );
            rs.updateString( "Email", upemail );
            rs.updateRow( ); //Commit changes to table
            JOptionPane.showMessageDialog(this, "Record updated");
        }
        catch (SQLException err) { //Handle errors here
            JOptionPane.showMessageDialog(this, err.getMessage( ));
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
close();      
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFaculty;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JMenu txt_date;
    private javax.swing.JMenu txt_time;
    // End of variables declaration//GEN-END:variables
}
